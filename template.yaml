AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  FeedMyTripApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Feed My Trip API
      StageName: Beta
      Auth:
        Authorizers:
          FMTApiCognitoAuthorizer:
            UserPoolArn: 
              - 'arn:aws:cognito-idp:us-east-1:563319661021:userpool/us-east-1_0JwI28hrb'

  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-auth
      Runtime: go1.x
      CodeUri: ./deploy/auth.zip
      Policies: AmazonCognitoPowerUser
      Tracing: Active
      Events:
        Login:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /auth/login
            Method: post
        Refresh:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /auth/refresh
            Method: get

  UsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-users
      Runtime: go1.x
      CodeUri: ./deploy/users.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /users/{id}
            Method: get
        UpdateFavorite:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /users/favorites/{contentType}/{contentId}
            Method: post

  TripsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-trips
      Runtime: go1.x
      CodeUri: ./deploy/trips.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        GetTrips:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips
            Method: get
        PostTrips:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips
            Method: post
        PatchTrip:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}
            Method: patch
        DeleteTrip:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}
            Method: delete
        PostParticipant:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/participants
            Method: post
        PatchParticipant:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/participants/{participantId}
            Method: patch
        DeleteParticipant:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/participants/{participantId}
            Method: delete
        PostInvite:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/invites
            Method: post
        DeleteInvite:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/invites/{inviteId}
            Method: delete
        PostItinerary:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries
            Method: post
        PatchItinerary:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itineraryId}
            Method: patch
        DeleteItinerary:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itineraryId}
            Method: delete
        PostItineraryAddGlobalEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itineraryId}/add/{globalEventId}
            Method: post
        PostItineraryNewEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itineraryId}/events
            Method: post
        UpdateItineraryEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itineraryId}/events/{eventId}
            Method: patch
        DeleteItineraryEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itineraryId}/events/{eventId}
            Method: delete

  EventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-events
      Runtime: go1.x
      CodeUri: ./deploy/events.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        GetEvents:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events
            Method: get
        PostEvents:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events
            Method: post
        UpdateEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}
            Method: patch
        DeleteEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}
            Method: delete
        PostEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}/schedules
            Method: post
        UpdateEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}/schedules/{scheduleId}
            Method: patch
        DeleteEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}/schedules/{scheduleId}
            Method: delete

  HighlightsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-highlights
      Runtime: go1.x
      CodeUri: ./deploy/highlights.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        GetHighlights:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights
            Method: get
        PostHighlights:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights
            Method: post
        GetHighlight:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights/{id}
            Method: get
        UpdateHighlight:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights/{id}
            Method: patch
        DeleteHighlight:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights/{id}
            Method: delete
        AddHighlightContent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights/{id}/add/{contentType}/{contentId}
            Method: post
        RemoveHighlightContent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights/{id}/remove/{contentType}/{contentId}
            Method: delete

  CategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-categories
      Runtime: go1.x
      CodeUri: ./deploy/categories.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        GetCategories:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /categories
            Method: get
        PostCategories:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /categories
            Method: post
        UpdateCategory:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /categories/{id}
            Method: patch
        DeleteCategory:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /categories/{id}
            Method: delete

  GeonamesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-geonames
      Runtime: go1.x
      CodeUri: ./deploy/geonames.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        PostGeoname:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /geonames
            Method: post
        UpdateGeoname:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /geonames/{id}
            Method: patch
        DeleteGeoname:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /geonames/{id}
            Method: delete
        GetCountries:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /geonames/countries
            Method: get
        GetCities:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth: 
              Authorizer: FMTApiCognitoAuthorizer
            Path: /geonames/countries/{id}
            Method: get
