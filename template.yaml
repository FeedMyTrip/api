AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  FeedMyTripApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Feed My Trip API
      StageName: beta
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      Auth:
        Authorizers:
          FMTApiCognitoAuthorizer:
            UserPoolArn:
              - "arn:aws:cognito-idp:us-east-1:563319661021:userpool/us-east-1_0JwI28hrb"

  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-auth
      Runtime: go1.x
      CodeUri: ./deploy/auth.zip
      Policies: AmazonCognitoPowerUser
      Tracing: Active
      Events:
        Login:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /auth/login
            Method: post
        Refresh:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /auth/refresh
            Method: get

  UsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-users
      Runtime: go1.x
      CodeUri: ./deploy/users.zip
      Policies:
        - AmazonDynamoDBFullAccess
        - TranslateReadOnly
      VpcConfig:
        SecurityGroupIds:
          - sg-05bb4563990046df8
        SubnetIds:
          - subnet-059e210ebcd66c877
          - subnet-07efbbfd0de6c481b
          - subnet-092fdd32984185a6f
          - subnet-0c334359e212b7f1d
      Tracing: Active
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /users
            Method: get
        PostUsers:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /users
            Method: post
        UpdateUser:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /users/{id}
            Method: patch
        DeleteUser:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /users/{id}
            Method: delete

  TripsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-trips
      Runtime: go1.x
      CodeUri: ./deploy/trips.zip
      Policies:
        - AmazonDynamoDBFullAccess
        - TranslateReadOnly
      VpcConfig:
        SecurityGroupIds:
          - sg-05bb4563990046df8
        SubnetIds:
          - subnet-059e210ebcd66c877
          - subnet-07efbbfd0de6c481b
          - subnet-092fdd32984185a6f
          - subnet-0c334359e212b7f1d
      Tracing: Active
      Events:
        GetTrips:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips
            Method: get
        PostTrips:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips
            Method: post
        PatchTrip:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}
            Method: patch
        DeleteTrip:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}
            Method: delete
        GetParticipants:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/participants
            Method: get
        PostParticipant:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/participants
            Method: post
        PatchParticipant:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/participants/{participant_id}
            Method: patch
        DeleteParticipant:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/participants/{participant_id}
            Method: delete
        GetInvites:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/invites
            Method: get
        PostInvite:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/invites
            Method: post
        DeleteInvite:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/invites/{invite_id}
            Method: delete
        GetItineraries:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries
            Method: get
        PostItinerary:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries
            Method: post
        PatchItinerary:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itinerary_id}
            Method: patch
        DeleteItinerary:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itinerary_id}
            Method: delete
        PostItineraryAddGlobalEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itinerary_id}/add/{global_event_id}
            Method: post
        GetItineraryEvents:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itinerary_id}/events
            Method: get
        PostItineraryNewEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itinerary_id}/events
            Method: post
        UpdateItineraryEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itinerary_id}/events/{event_id}
            Method: patch
        DeleteItineraryEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /trips/{id}/itineraries/{itinerary_id}/events/{event_id}
            Method: delete

  EventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-events
      Runtime: go1.x
      CodeUri: ./deploy/events.zip
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - TranslateReadOnly
      VpcConfig:
        SecurityGroupIds:
          - sg-05bb4563990046df8
        SubnetIds:
          - subnet-059e210ebcd66c877
          - subnet-07efbbfd0de6c481b
          - subnet-092fdd32984185a6f
          - subnet-0c334359e212b7f1d
      Tracing: Active
      Events:
        GetEvents:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events
            Method: get
        PostEvents:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events
            Method: post
        GetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}
            Method: get
        UpdateEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}
            Method: patch
        DeleteEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}
            Method: delete
        PostEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}/schedules
            Method: post
        GetEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}/schedules
            Method: get
        UpdateEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}/schedules/{schedule_id}
            Method: patch
        DeleteEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /events/{id}/schedules/{schedule_id}
            Method: delete

  HighlightsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-highlights
      Runtime: go1.x
      CodeUri: ./deploy/highlights.zip
      Policies:
        - AmazonDynamoDBFullAccess
        - TranslateReadOnly
      VpcConfig:
        SecurityGroupIds:
          - sg-05bb4563990046df8
        SubnetIds:
          - subnet-059e210ebcd66c877
          - subnet-07efbbfd0de6c481b
          - subnet-092fdd32984185a6f
          - subnet-0c334359e212b7f1d
      Tracing: Active
      Events:
        GetHighlights:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights
            Method: get
        PostHighlights:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights
            Method: post
        UpdateHighlight:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights/{id}
            Method: patch
        DeleteHighlight:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /highlights/{id}
            Method: delete

  CategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-categories
      Runtime: go1.x
      CodeUri: ./deploy/categories.zip
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - TranslateReadOnly
      VpcConfig:
        SecurityGroupIds:
          - sg-05bb4563990046df8
        SubnetIds:
          - subnet-059e210ebcd66c877
          - subnet-07efbbfd0de6c481b
          - subnet-092fdd32984185a6f
          - subnet-0c334359e212b7f1d
      Tracing: Active
      Events:
        GetCategories:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /categories
            Method: get
        PostCategories:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /categories
            Method: post
        UpdateCategory:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /categories/{id}
            Method: patch
        DeleteCategory:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /categories/{id}
            Method: delete

  LocationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-locations
      Runtime: go1.x
      CodeUri: ./deploy/locations.zip
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - TranslateReadOnly
      VpcConfig:
        SecurityGroupIds:
          - sg-05bb4563990046df8
        SubnetIds:
          - subnet-059e210ebcd66c877
          - subnet-07efbbfd0de6c481b
          - subnet-092fdd32984185a6f
          - subnet-0c334359e212b7f1d
      Tracing: Active
      Events:
        PostLocation:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /locations
            Method: post
        GetLocation:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /locations
            Method: get
        UpdateLocation:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /locations/{id}
            Method: patch
        DeleteLocation:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Auth:
              Authorizer: FMTApiCognitoAuthorizer
            Path: /locations/{id}
            Method: delete
