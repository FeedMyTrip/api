AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  FeedMyTripApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Feed My Trip API
      StageName: Beta

  TripsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-trips
      Runtime: go1.x
      CodeUri: ./deploy/trips.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        GetTrips:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips
            Method: get
        PostTrips:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips
            Method: post
        PatchTrip:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}
            Method: patch
        DeleteTrip:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}
            Method: delete
        PostParticipant:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}/participants
            Method: post
        PatchParticipant:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}/participants/{participantId}
            Method: patch
        DeleteParticipant:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}/participants/{participantId}
            Method: delete
        PostInvite:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}/invites
            Method: post
        DeleteInvite:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}/invites/{inviteId}
            Method: delete
        PostItinerary:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}/itineraries
            Method: post
        PatchItinerary:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}/itineraries/{itineraryId}
            Method: patch
        DeleteItinerary:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /trips/{id}/itineraries/{itineraryId}
            Method: delete

  EventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-events
      Runtime: go1.x
      CodeUri: ./deploy/events.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        GetEvents:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /events
            Method: get
        PostEvents:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /events
            Method: post
        UpdateEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /events/{id}
            Method: patch
        DeleteEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /events/{id}
            Method: delete
        PostEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /events/{id}/schedules
            Method: post
        UpdateEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /events/{id}/schedules/{scheduleId}
            Method: patch
        DeleteEventSchedule:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /events/{id}/schedules/{scheduleId}
            Method: delete

  UserEventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-userEvents
      Runtime: go1.x
      CodeUri: ./deploy/userEvents.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        GetUserEvents:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /userevents
            Method: get
        PostUserEvents:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /userevents
            Method: post
        UpdateUserEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /userevents/{id}
            Method: patch
        DeleteUserEvent:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /userevents/{id}
            Method: delete

  CategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-categories
      Runtime: go1.x
      CodeUri: ./deploy/categories.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        GetCategories:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /categories
            Method: get
        PostCategories:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /categories
            Method: post
        UpdateCategory:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /categories/{id}
            Method: patch
        DeleteCategory:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /categories/{id}
            Method: delete

  GeonamesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fmt-lambda-geonames
      Runtime: go1.x
      CodeUri: ./deploy/geonames.zip
      Policies: AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        PostGeoname:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /geonames
            Method: post
        UpdateGeoname:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /geonames/{id}
            Method: patch
        DeleteGeoname:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /geonames/{id}
            Method: delete
        GetCountries:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /geonames/countries
            Method: get
        GetCities:
          Type: Api
          Properties:
            RestApiId: !Ref FeedMyTripApiGateway
            Path: /geonames/countries/{id}
            Method: get
